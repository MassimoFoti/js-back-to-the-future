/*! 
Luga Common 0.9.7dev 2017-09-30T18:03:36.521Z
Copyright 2013-2017 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof jQuery)throw"Unable to find jQuery";if("undefined"==typeof luga)var luga={};!function(){"use strict";function attributesToProperties(node,obj){if(null!==node.attributes&&void 0!==node.attributes)for(var i=0;i<node.attributes.length;i++){var attr=node.attributes[i];obj[luga.xml.ATTRIBUTE_PREFIX+attr.name]=attr.value}}function childrenToProperties(node,obj){for(var i=0;i<node.childNodes.length;i++){var child=node.childNodes[i];if(1===child.nodeType){var isArray=!1,tagName=child.nodeName;if(void 0!==obj[tagName]){if(obj[tagName].constructor!==Array){var curValue=obj[tagName];obj[tagName]=[],obj[tagName].push(curValue)}isArray=!0}if(nodeHasText(child)===!0)obj[child.nodeName]=getTextValue(child);else{var childObj=luga.xml.nodeToHash(child);isArray===!0?obj[tagName].push(childObj):obj[tagName]=childObj}}}}function getTextValue(node){var child=node.childNodes[0];return 3===child.nodeType||4===child.nodeType?child.data:void 0}function nodeHasText(node){var child=node.childNodes[0];return null===child||null!==child.nextSibling||3!==child.nodeType&&4!==child.nodeType?!1:!0}luga.namespace=function(ns,rootObject){var parts=ns.split(".");void 0===rootObject&&(rootObject=window);for(var i=0;i<parts.length;i++)void 0===rootObject[parts[i]]&&(rootObject[parts[i]]={}),rootObject=rootObject[parts[i]];return rootObject},luga.namespace("luga.common"),luga.common.version="0.9.7dev",luga.extend=function(baseFunc,func,args){baseFunc.apply(func,args)},luga.isArray=function(obj){return Array.isArray(obj)},luga.isFunction=function(obj){return"function"===luga.type(obj)},luga.isPlainObject=function(obj){if("[object Object]"!==Object.prototype.toString.call(obj))return!1;var proto=Object.getPrototypeOf(obj);if(null===proto)return!0;var constructor=Object.prototype.hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof("function"===constructor)&&Function.toString.call(constructor)===Function.toString.call(Object)},luga.lookupFunction=function(path){if(!path)return void 0;var reference=luga.lookupProperty(window,path);return luga.isFunction(reference)===!0?reference:void 0},luga.lookupProperty=function(object,path){if(!object||!path)return void 0;if(void 0!==object[path])return object[path];for(var parts=path.split(".");parts.length>0;){var part=parts.shift();if(void 0!==object[part]){if(0===parts.length)return object[part];object=object[part]}}return void 0},luga.merge=function(target,source){for(var x in source)target[x]=source[x]},luga.setProperty=function(object,path,value){var parts=path.split(".");for(1===parts.length&&(object[path]=value);parts.length>0;){var part=parts.shift();if(void 0!==object[part]){if(0===parts.length){object[part]=value;break}object=object[part]}else parts.length>0?(object[part]={},object=object[part]):object[part]=value}},luga.NOTIFIER_CONST={ERROR_MESSAGES:{NOTIFIER_ABSTRACT:"It's forbidden to use luga.Notifier directly, it must be used as a base class instead",INVALID_OBSERVER_PARAMETER:"addObserver(): observer parameter must be an object",INVALID_DATA_PARAMETER:"notifyObserver(): data parameter is required and must be an object"}},luga.Notifier=function(){if(this.constructor===luga.Notifier)throw luga.NOTIFIER_CONST.ERROR_MESSAGES.NOTIFIER_ABSTRACT;this.observers=[];var prefix="on",suffix="Handler",generateMethodName=function(eventName){var str=prefix;return str+=eventName.charAt(0).toUpperCase(),str+=eventName.substring(1),str+=suffix};this.addObserver=function(observer){if("object"!==luga.type(observer))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_OBSERVER_PARAMETER;this.observers.push(observer)},this.notifyObservers=function(eventName,payload){if("object"!==luga.type(payload))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_DATA_PARAMETER;for(var method=generateMethodName(eventName),i=0;i<this.observers.length;i++){var observer=this.observers[i];observer[method]&&luga.isFunction(observer[method])&&observer[method](payload)}},this.removeObserver=function(observer){for(var i=0;i<this.observers.length;i++)if(this.observers[i]===observer){this.observers.splice(i,1);break}}};var class2type={};["Array","Boolean","Date","Error","Function","Number","Object","RegExp","String","Symbol"].forEach(function(element,i,collection){class2type["[object "+element+"]"]=element.toLowerCase()}),luga.type=function(obj){if(null===obj)return"null";var rawType=typeof obj;if("object"===rawType||"function"===rawType){var stringType=Object.prototype.toString.call(obj);return class2type[stringType]}return rawType},luga.namespace("luga.dom.nodeIterator"),luga.dom.nodeIterator.getInstance=function(rootNode,filterFunc){var filter={acceptNode:function(node){return void 0!==filterFunc&&filterFunc(node)===!1?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT}},safeFilter=filter.acceptNode;return safeFilter.acceptNode=filter.acceptNode,document.createNodeIterator(rootNode,NodeFilter.SHOW_ELEMENT,safeFilter,!1)},luga.namespace("luga.dom.treeWalker"),luga.dom.treeWalker.getInstance=function(rootNode,filterFunc){var filter={acceptNode:function(node){return void 0!==filterFunc&&filterFunc(node)===!1?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT}},safeFilter=filter.acceptNode;return safeFilter.acceptNode=filter.acceptNode,document.createTreeWalker(rootNode,NodeFilter.SHOW_ELEMENT,safeFilter,!1)},luga.namespace("luga.form"),luga.form.CONST={FIELD_SELECTOR:"input,select,textarea",FAKE_INPUT_TYPES:{fieldset:!0,reset:!0},MESSAGES:{MISSING_FORM:"Unable to load form"}},luga.form.toMap=function(rootNode,demoronize){if(0===rootNode.length)throw luga.form.CONST.MESSAGES.MISSING_FORM;for(var map={},fields=luga.form.utils.getChildFields(rootNode),i=0;i<fields.length;i++)if(luga.form.utils.isSuccessfulField(fields[i])===!0){var fieldName=jQuery(fields[i]).attr("name"),fieldValue=null,fieldType=jQuery(fields[i]).prop("type");switch(fieldType){case"select-multiple":fieldValue=jQuery(fields[i]).val();break;case"checkbox":case"radio":jQuery(fields[i]).prop("checked")===!0&&(fieldValue=jQuery(fields[i]).val());break;default:fieldValue=jQuery(fields[i]).val()}null!==fieldValue&&(demoronize===!0&&(fieldValue=luga.string.demoronize(fieldValue)),void 0===map[fieldName]?map[fieldName]=fieldValue:luga.isArray(map[fieldName])===!0?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue])}return map},luga.form.toHash=function(rootNode,demoronize){return luga.form.toMap(rootNode,demoronize)},luga.form.toJson=function(rootNode){var flatData=luga.form.toMap(rootNode),jsonData={};for(var x in flatData)luga.setProperty(jsonData,x,flatData[x]);return jsonData},luga.form.toQueryString=function(rootNode,demoronize){if(0===rootNode.length)throw luga.form.CONST.MESSAGES.MISSING_FORM;for(var str="",fields=luga.form.utils.getChildFields(rootNode),i=0;i<fields.length;i++)if(luga.form.utils.isSuccessfulField(fields[i])===!0){var fieldName=jQuery(fields[i]).attr("name"),fieldValue=jQuery(fields[i]).val(),fieldType=jQuery(fields[i]).prop("type");switch(fieldType){case"select-multiple":for(var j=0;j<fieldValue.length;j++)str=appendQueryString(str,fieldName,fieldValue[j],demoronize);break;case"checkbox":case"radio":jQuery(fields[i]).prop("checked")===!0&&(str=appendQueryString(str,fieldName,fieldValue,demoronize));break;default:str=appendQueryString(str,fieldName,fieldValue,demoronize)}}return str};var appendQueryString=function(str,fieldName,fieldValue,demoronize){return""!==str&&(str+="&"),str+=encodeURIComponent(fieldName),str+="=",str+=demoronize===!0?encodeURIComponent(luga.string.demoronize(fieldValue)):encodeURIComponent(fieldValue)};luga.namespace("luga.form.utils"),luga.form.utils.isSuccessfulField=function(fieldNode){return luga.form.utils.isInputField(fieldNode)===!1?!1:jQuery(fieldNode).prop("disabled")===!0?!1:void 0===jQuery(fieldNode).attr("name")?!1:!0},luga.form.utils.isInputField=function(fieldNode){return void 0===jQuery(fieldNode).prop("type")?!1:luga.form.CONST.FAKE_INPUT_TYPES[jQuery(fieldNode).prop("type")]===!0?!1:!0},luga.form.utils.getFieldGroup=function(name,rootNode){var selector="input[name='"+name+"']";return jQuery(selector,rootNode)},luga.form.utils.getChildFields=function(rootNode){var fields=[];return jQuery(rootNode).find(luga.form.CONST.FIELD_SELECTOR).each(function(index,item){luga.form.utils.isInputField(item)&&fields.push(item)}),fields},luga.namespace("luga.localStorage"),luga.localStorage.retrieve=function(root,path){return luga.lookupProperty(getRootState(root),path)},luga.localStorage.persist=function(root,path,value){var json=getRootState(root);luga.setProperty(json,path,value),setRootState(root,json)};var setRootState=function(root,json){localStorage.setItem(root,JSON.stringify(json))},getRootState=function(root){var rootJson=localStorage.getItem(root);return null===rootJson?{}:JSON.parse(rootJson)};luga.namespace("luga.string"),luga.string.demoronize=function(str){return str=str.replace(new RegExp(String.fromCharCode(710),"g"),"^"),str=str.replace(new RegExp(String.fromCharCode(732),"g"),"~"),str=str.replace(new RegExp(String.fromCharCode(8216),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8217),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8220),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8221),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8211),"g"),"-"),str=str.replace(new RegExp(String.fromCharCode(8212),"g"),"--"),str=str.replace(new RegExp(String.fromCharCode(8218),"g"),","),str=str.replace(new RegExp(String.fromCharCode(8222),"g"),",,"),str=str.replace(new RegExp(String.fromCharCode(8226),"g"),"*"),str=str.replace(new RegExp(String.fromCharCode(8230),"g"),"...")},luga.string.format=function(str,args){var pattern=null;if(luga.isArray(args)===!0)for(var i=0;i<args.length;i++)pattern=new RegExp("\\{"+i+"\\}","g"),str=str.replace(pattern,args[i]);if(luga.isPlainObject(args)===!0)for(var x in args)pattern=new RegExp("\\{"+x+"\\}","g"),str=str.replace(pattern,args[x]);return str},luga.string.queryToMap=function(str){var map={};if("?"===str.charAt(0)&&(str=str.substring(1)),0===str.length)return map;for(var parts=str.split("&"),i=0;i<parts.length;i++){var tokens=parts[i].split("="),fieldName=decodeURIComponent(tokens[0]),fieldValue="";2===tokens.length&&(fieldValue=decodeURIComponent(tokens[1])),void 0===map[fieldName]?map[fieldName]=fieldValue:luga.isArray(map[fieldName])===!0?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue]}return map};var propertyPattern=new RegExp("\\{([^}]*)}","g");luga.string.populate=function(str,obj){if(luga.isPlainObject(obj)===!0)for(var results;null!==(results=propertyPattern.exec(str));){var property=luga.lookupProperty(obj,results[1]);if(void 0!==property){var pattern=new RegExp(results[0],"g");str=str.replace(pattern,property),propertyPattern.test(str)}}return str},luga.namespace("luga.utils"),luga.utils.CONST={CSS_CLASSES:{MESSAGE:"luga-message",ERROR_MESSAGE:"luga-error-message"},MSG_BOX_ID:"lugaMessageBox"};var generateBoxId=function(node){var boxId=luga.utils.CONST.MSG_BOX_ID;return void 0===node.attr("id")?boxId+=node.attr("id"):void 0!==node.attr("name")&&(boxId+=node.attr("name")),boxId};luga.utils.removeDisplayBox=function(node){var boxId=generateBoxId(jQuery(node)),oldBox=jQuery("#"+boxId);oldBox.length>0&&oldBox.remove()},luga.utils.displayMessage=function(node,html){return luga.utils.displayBox(node,html,luga.utils.CONST.CSS_CLASSES.MESSAGE)},luga.utils.displayErrorMessage=function(node,html){return luga.utils.displayBox(node,html,luga.utils.CONST.CSS_CLASSES.ERROR_MESSAGE)},luga.utils.displayBox=function(node,html,cssClass){void 0===cssClass&&(cssClass=luga.utils.CONST.CSS_CLASSES.MESSAGE);var boxId=generateBoxId(jQuery(node)),box=jQuery("<div></div>");box.attr("id",boxId),box.addClass(cssClass),box.html(html);var oldBox=jQuery("#"+boxId);return oldBox.length>0?oldBox.replaceWith(box):jQuery(node).before(box),box},luga.namespace("luga.xml"),luga.xml.MIME_TYPE="application/xml",luga.xml.ATTRIBUTE_PREFIX="_",luga.xml.DOM_ACTIVEX_NAME="MSXML2.DOMDocument.4.0",luga.xml.evaluateXPath=function(node,path){var retArray=[];if(void 0!==window.ActiveXObject){for(var selectedNodes=node.selectNodes(path),i=0;i<selectedNodes.length;i++)retArray.push(selectedNodes[i]);return retArray}for(var evaluator=new XPathEvaluator,result=evaluator.evaluate(path,node,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),currentNode=result.iterateNext();null!==currentNode;)retArray.push(currentNode),currentNode=result.iterateNext();return retArray},luga.xml.nodeToHash=function(node){var obj={};return attributesToProperties(node,obj),childrenToProperties(node,obj),obj},luga.xml.nodeToString=function(node){if(void 0!==window.ActiveXObject)return node.xml;var serializer=new XMLSerializer;return serializer.serializeToString(node,luga.xml.MIME_TYPE)},luga.xml.parseFromString=function(xmlStr){var xmlParser;if(void 0!==window.ActiveXObject){var xmlDOMObj=new ActiveXObject(luga.xml.DOM_ACTIVEX_NAME);return xmlDOMObj.async=!1,xmlDOMObj.loadXML(xmlStr),xmlDOMObj}xmlParser=new DOMParser;var domDoc=xmlParser.parseFromString(xmlStr,luga.xml.MIME_TYPE);return domDoc}}();
//# sourceMappingURL=luga.common.min.js.map

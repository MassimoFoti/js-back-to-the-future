{"version":3,"sources":["jasmineMatchers.js"],"names":["window","jasmineMatchers","version","toMatchDuckType","compare","actual","duckType","matchType","result","pass","undefined","message","jQuery","type","key","hasOwnProperty","duckProp","toHaveReadonly","parentObject","property","desc","Object","getOwnPropertyDescriptor","writable","hasProperty","actualValue","expectedValue","toBeChecked","element","is","toBeDisabled","toBeEmpty","toBeMatchedBy","selector","filter","length","toBeSelected","toBeVisible","toHaveAttr","attributeName","attr","toHaveClass","className","hasClass","toHaveCss","propertyName","css","jasmine","getEnv","beforeEach","addMatchers"],"mappings":"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","file":"jasmineMatchers.min.js","sourcesContent":["/* istanbul ignore if */\r\nif(typeof(jQuery) === \"undefined\"){\r\n\tthrow(\"Unable to find jQuery\");\r\n}\r\n\r\n/* istanbul ignore else */\r\nif(typeof(window.jasmineMatchers) === \"undefined\"){\r\n\twindow.jasmineMatchers = {};\r\n}\r\n\r\n/**\r\n * @typedef {Object} jasmineMatchers.result\r\n *\r\n * @property {Boolean} pass\r\n * @property {String} [message]\r\n */\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tjasmineMatchers.version = \"0.1\";\r\n\r\n\t/* Generic matchers */\r\n\r\n\tjasmineMatchers.toMatchDuckType = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {Object} actual\r\n\t\t\t * @param {Object} duckType\r\n\t\t\t * @param {Boolean} [matchType] Define if we have to compare type of property. Default to true\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(actual, duckType, matchType){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(duckType === undefined){\r\n\t\t\t\t\tresult.message = \"Please specify an instance of a duckType\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(jQuery.type(actual) !== jQuery.type(duckType)){\r\n\t\t\t\t\tresult.message = \"Type mismatch, comparing: \" + jQuery.type(actual) + \" vs \" + jQuery.type(duckType);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(matchType === undefined){\r\n\t\t\t\t\t// By default we check for type\r\n\t\t\t\t\tmatchType = true;\r\n\t\t\t\t}\r\n\t\t\t\tfor(var key in duckType){\r\n\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\tif(duckType.hasOwnProperty(key) === true){\r\n\t\t\t\t\t\tvar duckProp = duckType[key];\r\n\t\t\t\t\t\tif(actual.hasOwnProperty(key) === true){\r\n\t\t\t\t\t\t\tif(matchType === true){\r\n\t\t\t\t\t\t\t\tif(jQuery.type(duckProp) !== jQuery.type(actual[key])){\r\n\t\t\t\t\t\t\t\t\tresult.pass = false;\r\n\t\t\t\t\t\t\t\t\tresult.message = \"Type of: .\" + key + \" does not match. Supposed to be: \" + jQuery.type(duckProp);\r\n\t\t\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tresult.message = \"The following duck property is missing: .\" + key;\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult.pass = true;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toHaveReadonly = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {Object} parentObject\r\n\t\t\t * @param {String} property\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(parentObject, property){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery.type(property) !== \"string\"){\r\n\t\t\t\t\tresult.message = \"Please specify the name of the property as string\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(parentObject, property);\r\n\t\t\t\tif(desc === undefined){\r\n\t\t\t\t\tresult.message = \"Unable to find property: \" + property;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(desc.writable === false){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.message = \"Property: \" + property + \" is not readonly\";\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t/* jQuery-based matchers */\r\n\r\n\tvar hasProperty = function(actualValue, expectedValue){\r\n\t\tif(expectedValue === undefined){\r\n\t\t\treturn actualValue !== undefined;\r\n\t\t}\r\n\t\treturn actualValue === expectedValue;\r\n\t};\r\n\r\n\tjasmineMatchers.toBeChecked = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery(element).is(\":checked\") === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element is not checked\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toBeDisabled = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery(element).is(\":disabled\") === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element is not disabled\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toBeEmpty = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery(element).is(\":empty\") === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element is not empty\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toBeMatchedBy = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @param {String} selector\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element, selector){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery.type(selector) !== \"string\"){\r\n\t\t\t\t\tresult.message = \"Please specify the selector as string\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(jQuery(element).filter(selector).length > 0){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element not matched by: \" + selector;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toBeSelected = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery(element).is(\":selected\") === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element is not selected\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toBeVisible = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery(element).is(\":visible\") === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Element is not visible\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toHaveAttr = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @param {String} attributeName\r\n\t\t\t * @param {String} expectedValue\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element, attributeName, expectedValue){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery.type(attributeName) !== \"string\"){\r\n\t\t\t\t\tresult.message = \"Please specify the attribute as string\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(hasProperty(jQuery(element).attr(attributeName), expectedValue) === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"Attribute: \" + attributeName + \" does not match\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toHaveClass = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @param {String} className\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element, className){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery.type(className) !== \"string\"){\r\n\t\t\t\t\tresult.message = \"Please specify the name of the CSS class as string\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(jQuery(element).hasClass(className) === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"CSS class: \" + className + \" not found\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmineMatchers.toHaveCss = function(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @param {jQuery} element\r\n\t\t\t * @param {String} propertyName\r\n\t\t\t * @param {String} expectedValue\r\n\t\t\t * @return {jasmineMatchers.result}\r\n\t\t\t */\r\n\t\t\tcompare: function(element, propertyName, expectedValue){\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tpass: false\r\n\t\t\t\t};\r\n\t\t\t\tif(jQuery.type(propertyName) !== \"string\"){\r\n\t\t\t\t\tresult.message = \"Please specify the CSS property as string\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\t// Second case is Chrome only\r\n\t\t\t\tif(jQuery(element).css(propertyName) === \"\" || jQuery(element).css(propertyName) === \"0px\"){\r\n\t\t\t\t\tresult.message = \"CSS property: \" + propertyName + \" not found\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tif(hasProperty(jQuery(element).css(propertyName), expectedValue) === true){\r\n\t\t\t\t\tresult.pass = true;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tresult.message = \"CSS property: \" + propertyName + \" does not match\";\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tjasmine.getEnv().beforeEach(function(){\r\n\t\tjasmine.getEnv().addMatchers(jasmineMatchers);\r\n\t});\r\n\r\n}());"],"sourceRoot":"."}
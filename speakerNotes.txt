
PREPARATION:
- Clone from Git
- Install Node.js
- NPM install


ASK THE AUDIENCE:
- Do you write unit test in JavaScript?
- Experience in unit testing on other languages?
- Which framework: Jasmine, Mocha, Jest?
- Jasmine is just a tool, the lessons will apply to others too. Syntax is similar
   
- Ask questions anytime. Assistants are here to help


WHY WE TEST:
- Avoid regressions
- Consume your own API
- Ruthlessly refactor
- Avoid "don't touch the legacy mess" situations
- Narrow the mental focus by giving devs a "safety net"
- Reduce the cost of context switch

- Untestable code is just lame excuse. Refactor it!
- Trust me, testable code is better code

- It's hard work
- It takes months before see the benefits

- Would you write code without version control?
  Then why you write code without unit tests?


BBD:
- Cucumber, anyone?
- BDD and all that jazz, mostly a failure, what's left?

- Describe test as you are talking to the guy sitting next to you
  You talk to humans, not computers
  A good story is more tha just a test, it documents and last in memory

- An hole in the story means an hole in the test
  An hole in JUnit is hard to spot instead

- Narrative tests. The importance of story telling
- Tests are code samples too
- Useful "live" documentation


EXAMPLES:
- luga.string.format()


WIZARD AS EXAMPLE:

- Testing the GUI, not only the logic. How far we can/should go?
- Quick Wizard's demo
- Explain Wizard/Step relationship
- Testing menus and buttons
- Testing DOM elements and CSS classes
- Testing events (onclick etc)
- Jasmine vs Selenium

- Limitations with keyboad and focus/blur


TDD EXERCISE:
- String manipulation $first.second.thrird[1] -> first second third 1
- Do the simplest thing
- Refactor only at the end!
- Compare implementations


WHEN TO WRITE TESTS?
- Before, during, after?
- Don't wait too long!
- If you can write the API on a whiteborad, you can TDD
- Always TDD bug fixes!


ADVANCED:
- SetUp/TearDown beforeEach/afterEach
- Spies
- With spies you test the single unit
- Controller.Spec.js Spies and Mocks
- Many bugs hide at the boundaries

- Do we need mock libraries?

- Use xdescribe


FIXTURES:
- luga.form.toQueryString()
- loadFixture() vs readFixture()
- jasmineFixtures vs jasmine-jquery
- Limitation of JSON fixtures vs live output from server
- Fixtures need to be up to date


CODE COVERAGE:
- Infrastructure: Karma, Instanbul
- It's just a number, required but not sufficient
- Try to reach 100% may be a worth learning exercise


THE ECOSYSTEM:
- A list of useful links
- Plain HTML runner vs Karma
- IDE integration
- Karma
- JUnit xml reports for CI
- Additional matchers
- jasmine-ajax
- Browserstack and multiple browsers
- Karma config:
  order of loading
  "base" prefix
  serving fixtures
  reporters
  autowatch


FINAL REMARKS:
- Quick round of feedback
- Code is on Github, for what's worth
- Luga JS is worth looking for examples

- A place to talk for Frontenders Ticino?


